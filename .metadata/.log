!SESSION 2022-01-21 17:01:55.891 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-21 17:03:11.168
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-21 17:03:11.168
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@8b1202a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@34bddf43,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-21 17:03:11.168
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57839834,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3355b8ff,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-21 17:03:22.584
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-26 16:51:43.769 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-26 16:52:06.401
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-26 16:52:06.401
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2f61de04,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5f5a33ed,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-26 16:52:06.401
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5b59c3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@69e36fe3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-26 16:52:14.095
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-27 19:25:35.705 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-27 19:26:04.707
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-27 19:26:04.707
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@46188a89,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6f65a203,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-27 19:26:04.707
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1d0b447b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4de158ca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-27 19:26:16.421
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-28 16:18:55.235 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-28 16:19:23.588
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-28 16:19:23.588
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5b59c3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@69e36fe3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-28 16:19:23.589
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@48d31d25,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@46188a89,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-28 16:19:34.697
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-02 18:04:31.862 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 4 567 2022-02-02 18:05:58.610
!MESSAGE Workspace restored, but some problems occurred.
!SUBENTRY 1 org.eclipse.core.resources 4 567 2022-02-02 18:05:58.610
!MESSAGE Could not read metadata for '.org.eclipse.egit.core.cmp'.
!STACK 1
org.eclipse.core.internal.resources.ResourceException(/.org.eclipse.egit.core.cmp)[567]: java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.lambda$2(BundleContextImpl.java:808)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:802)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:759)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1019)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:404)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:384)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:471)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:403)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SUBENTRY 2 org.eclipse.core.resources 4 567 2022-02-02 18:05:58.623
!MESSAGE The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
!STACK 0
java.lang.Exception: The project description file (.project) for '.org.eclipse.egit.core.cmp' is missing.  This file contains important information about the project.  The project will not function properly until this file is restored.
	at org.eclipse.core.internal.resources.ResourceException.provideStackTrace(ResourceException.java:42)
	at org.eclipse.core.internal.resources.ResourceException.<init>(ResourceException.java:38)
	at org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:908)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:888)
	at org.eclipse.core.internal.resources.SaveManager.restoreMetaInfo(SaveManager.java:868)
	at org.eclipse.core.internal.resources.SaveManager.restore(SaveManager.java:724)
	at org.eclipse.core.internal.resources.SaveManager.startup(SaveManager.java:1555)
	at org.eclipse.core.internal.resources.Workspace.startup(Workspace.java:2480)
	at org.eclipse.core.internal.resources.Workspace.open(Workspace.java:2231)
	at org.eclipse.core.resources.ResourcesPlugin.start(ResourcesPlugin.java:475)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.lambda$2(BundleContextImpl.java:808)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:802)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:759)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:1019)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:365)
	at org.eclipse.osgi.container.Module.doStart(Module.java:605)
	at org.eclipse.osgi.container.Module.start(Module.java:468)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:404)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:117)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:570)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:335)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:384)
	at org.eclipse.osgi.internal.loader.sources.SingleSourcePackage.loadClass(SingleSourcePackage.java:41)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass0(BundleLoader.java:471)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:403)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:168)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:153)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jface 2 0 2022-02-02 18:06:14.579
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-02 18:06:14.579
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c9151c1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2c3679e5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-02 18:06:14.579
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@41f40dfa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2548fc01,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-02 18:06:23.425
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-04 01:56:32.542 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-04 01:57:13.124
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-04 01:57:13.124
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@48d31d25,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@46188a89,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-04 01:57:13.124
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6f65a203,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1d0b447b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-04 01:57:21.902
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-05 23:51:04.188 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-05 23:51:28.280
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-05 23:51:28.280
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6f65a203,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1d0b447b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-05 23:51:28.280
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4de158ca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4f2fdf3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-05 23:51:36.761
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-06 01:35:30.648 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-06 01:35:36.601
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-06 01:35:36.601
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2f61de04,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5f5a33ed,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-06 01:35:36.601
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5b59c3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@69e36fe3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-06 01:35:40.361
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-06 17:35:58.841 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-06 17:36:19.501
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-06 17:36:19.501
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5b59c3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@69e36fe3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-06 17:36:19.501
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@48d31d25,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@46188a89,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-06 17:36:25.019
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-09 18:24:11.954 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-09 18:24:57.642
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-09 18:24:57.642
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3c3cd13a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@56b751b1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-09 18:24:57.642
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2f61de04,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5f5a33ed,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-09 18:25:07.164
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-24 20:15:28.898 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-24 20:16:25.134
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-24 20:16:25.134
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6f65a203,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1d0b447b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-24 20:16:25.134
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4de158ca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4f2fdf3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-24 20:16:37.690
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-02-24 22:11:33.028 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-02-24 22:11:58.671
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-24 22:11:58.671
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6f65a203,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1d0b447b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-02-24 22:11:58.671
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4de158ca,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4f2fdf3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-02-24 22:12:02.384
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-03-01 21:47:09.490 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-03-01 21:47:20.744
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-03-01 21:47:35.751
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-01 21:47:35.751
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@29bd2796,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@174b8d0e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-01 21:47:35.752
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@112530c3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@75959b0c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-01 21:47:42.836
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2022-03-03 19:32:42.135
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Exercicios_Java_Aulas_14_15 {
	
	public static void main(String[] args) {
		
	
	
	// 1. Faça um programa que peça dois número e imprima o maior deles.
	
	/* Scanner scan = new Scanner(System.in);
	System.out.println("Entre com dois números inteiros: ");
	
	int num1 = scan.nextInt();
	int num2 = scan.nextInt();
	
	if (num1 > num2) {
	System.out.println("O maior número é: " + num1);
	} else if (num1 < num2) {
		System.out.println("O maior número é: " + num2);
	}}

	// 2. Faça um programa que peça um valor e mostre na tela se o valor é positivo ou negativo. 

		Scanner scan = new Scanner(System.in);
		double numero = scan.nextDouble();
		
		if (numero < 0) {
			System.out.println("Número negativo");
		} else if (numero >= 0){
			System.out.println("Número positivo");
		}
		
		
		
	// 3. Faça um programa que verifique se uma letra digitada é "F", "M" ou "NB".
	// Conforme a letra escrever: F - Feminino, M - Masculino, NB - Não Binário.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Informe o sexo com 'F', 'M', 'NB':");
		String sexo = scan.nextLine();
		
		switch(sexo){
		case "F": System.out.println("F - Feminino");
		break;
		case "M": System.out.println("M- Masculino");
		break;
		case "NB": System.out.println("NB - Não Binário");
		break;
		default: System.out.println("Informação inválida");
		} 
		
	// 4. Faça um programa que verifique se uma letra digitada é vogal ou consoante.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Digite uma letra:");
		String letra = scan.next();
		
		switch(letra) {
		case "a": ;
		case "e": ; 
		case "i": ;
		case "o": ; 
		case "u": System.out.println("Vogal");
		break;
		default: System.out.println("Consoante ou numeral");
		}
		
		
	// 5. Faça um programa para leitura de duas notas parciais de um aluno.
	// O programa deve calcular a média alcançada por aluno e apresentar:
	// - A mensagem "Aprovado" se a média for maior ou igual a 7.
	// - A mensagem "Reprovado" se a média alcança for menor que 7.
	// - A mensagem "Aprovado com Distinção" se a média alcançada for igual a 10.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas do(a) aluno(a):");
		double nota1 = scan.nextDouble();
		double nota2 = scan.nextDouble();
		double media = (nota1 + nota2) / 2;
		
		if(media >= 7 && media < 9 ) {
			System.out.println("Aprovado.");
		}else if (media == 10){
			System.out.println("Aprovado com Distinção!");
		}else {
			System.out.println("Reprovado.");
		}
		
		
	// 6 . Faça um programa que leia três números e mostre o maior deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if(num1 > num2 && num1 > num3) {
			System.out.println("O maior número é: " + num1);
		}else if(num2 > num1 && num2 > num3) {
			System.out.println("O maior número é: " + num2);
		}else {
			System.out.println("O maior número é: " + num3);
		}
		
		
	// 7. Faça um programa que leia três número e mostre o maior e menor deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1 > num2 && num1 > num3 && num2 > num3) {
			System.out.println("O maior número é: " + num1);
			System.out.println("O menor número é: " + num3);
		} else if (num2 > num1 && num2 > num3 && num3 > num1) {
			System.out.println("O maior número é: " + num2);
			System.out.println("O menor número é: " + num1);
		} else if (num3 > num1 && num3 > num2 && num2 > num1) {
			System.out.println("O maior número é: " + num3);
			System.out.println("O menor número é:" + num1);
		}
		

		
	// 8. Faça um programa que pergunte o preço dos três produtos e 
	//	informe qual produto você deve comprar, sabendo que a decisão é sempre pelo mais barato.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe os valores dos três produtos:");
		double prod1 = scan.nextDouble();
		double prod2 = scan.nextDouble();
		double prod3 = scan.nextDouble();
		
		if (prod1 < prod2 && prod1 < prod3) {
			System.out.println("O produto com menor preço é: " + prod1);
		}else if(prod2 < prod1 && prod2 < prod3) {
			System.out.println("O produto com menor preço é: " + prod2);
		}else {
			System.out.println("O produto com menor preço é: " + prod3);
		}
		
		
		
	// 9. Faça um programa que leia três números e mostre-os em ordem descrescente:
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Entre com três números");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1> num2 && num1 > num3 && num2 > num3) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num2 + ", " + num3 +  ".");
		}else if (num2> num1 && num2 > num3 && num1 > num3) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num1 + ", " + num3 + ".");
		}else if (num3> num1 && num3 > num2 && num2 > num1) {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num2 + ", " + num1 + ".");
		}else if (num2 > num3 && num2 > num1 && num3 > num1) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num3 + ", " + num1 + ".");
		}else if(num1 > num2 && num1 > num3 && num3 > num2) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num3 + ", " + num2 + ".");
		}else {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num1 + ", " + num2 + ".");
		}
		
		
		
	// 10. Faça um programa que pergunte em que turno você estuda.
	// Peça para digitar M - Matutino, V - Vespertino, ou N - Noturno. Imprima a mensagem "Bom dia!",
	// "Boa tarde!" ou "Boa noite!" ou "Valor inválido", conforme o caso.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o turno em que você estudo com 'M' para matunino," + 
		"'V' para vespertino e 'N' para noturno:");
		String turno = scan.next();
		
		switch(turno) {
		case "M": System.out.println("Bom dia!");
		break;
		case "V": System.out.println("Boa tarde!");
		break;
		case "N": System.out.println("Boa noite!");
		break;
		default: System.out.println("Valor inválido");
		}
		
		
	// 11. As Organizações Tabajara  resolveram dar um aumento de salário aos seus colaboradores
	// e lhe contrataram  para desenvolver o programa que calculará os reajustes.
	//  Faça um programa que receba o salário de um colaborador e o reajuste segundo o seguinte critério , baseado no salário atual:
	// - Salários até R$280,00 (incluindo): aumento de 20%
	// - Salários entre R$280,00 e R$700,00: aumento de 15% 
	// - Salários entre R$700,00 e R$ 1.500,00: aumento de 10%
	// - Salários acima de R$1.500,00 em diante: aumento de 5%.
	// Após o aumento ter sido realizado, informe na tela: 
	// - O Salário antes do reajuste;
	// - O percentual de aumento  aplicado ;
	// - O valor do aumento;
	// - O novo salário após o aumento;
		
	Scanner scan = new Scanner(System.in);
	System.out.println("Informe o valor do salário ao qual será aplicado o aumento:");
	
	
	float salario = scan.nextFloat();
	float vintePercentual = 20 / 100;
	float quinzePercentual = 15 / 100;
	float dezPercentual = 10 / 100;
	float cincoPercentual = 5 / 100;
	float valorAcrescido;
	float valorFinal;
	
	
	if ( salario <= 280.00) {
		valorFinal = salario + (vintePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 20%");
		valorAcrescido = vintePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);	
	} else if (salario > 280.00 || salario < 700.00) {
		valorFinal = salario + (quinzePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 15%");
		valorAcrescido = quinzePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	} else if (salario > 700.00 || salario < 1500.00) {
		valorFinal = salario + (dezPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 10%");
		valorAcrescido = dezPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	}else {
		valorFinal = salario + (cincoPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 5%");
		valorAcrescido = cincoPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);

	} 
		
	// 12. Faça um programa para o cálculo de uma folha de pagamento sabendo que os descontos são de Impostos de Renda,
	// que depende do salário bruto (conforme tabela abaixo) e 3% para o Sindicato e que o FGTS corresponde a 11% do
	// Salário Bruto menos os descontos. O programa deverá pedir ao usuário o valor da sua hora e a quantidade de horas
	// trabalhadas no mês.
	// - Desconto do IR:
	// - Salario Bruto até R$: 900 (inclusive) - isento.
	// - Salario Bruto até R$: 1500 (inclusive) - desconto de 5%.
	// - Salario Bruto até R$: 2500 (inclusive) - desconto de 10%.
	// - Salario Bruto acima de R$: 2500 - desconto de 20%.
	// - Imprima na tela as informações, dispostas conforme o exemplo abaixo.
	// No exemplo o valor da hora é de R$:5 e as quantidade de horas trabalhadas é de 220. 
		
	// |Salário Bruto: (5*220)    	= R$: 1.100,00|
	// |(-) IR (5%)                 = R$:    55,00|
	// |(-) INSS (10%)              = R$:   110,00|
	// |FGTS (11%)                  = R$:   121,00|
	// |Total de Descontos          = R$:   165,00|
	// |Salário Liquido             = R$:   935,00|
		
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o valor do salário por hora seguido pelo número de horas trabalhadas no mês:");
		
		double salarioHora = scan.nextDouble();
		double horaMes = scan.nextDouble();
		double salarioMes = salarioHora * horaMes;
		double ir5 =  (5 / 100);
		double ir10 =  (10 / 100);
		double ir20 =  (20 / 100);
		double inss =  (10/100);
		double fgts = (11/100);
		
		if(salarioMes <= 900) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + "Isento");
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 900 && salarioMes <= 1500 ) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir5 *salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 1500 && salarioMes <= 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir10*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir20*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else {
			System.out.println("Valores inválidos");
		} 
		
	// 13. Faça um programa que leia um número e exiba o dia correspondente da semana. (1-Domingo, 2-Segunda, etc...), 
	// se digitar outro valor, deve aparecer, valor inválido.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Digite um número de 1 a 7 correspondente a um dia da semana.");
		
		int dia = scan.nextInt();
		
		switch(dia) {
		case 1: System.out.println("Domingo");
		break;
		case 2: System.out.println("Segunda");
		break;
		case 3: System.out.println("Terça");
		break;
		case 4: System.out.println("Quarta");
		break;
		case 5: System.out.println("Quinta");
		break;
		case 6: System.out.println("Sexta");
		break;
		case 7: System.out.println("Sábado");
		break;
		default:System.out.println("Valor inválido");
		}
		*/
	// 14. Faça um programa que lê as duas notas parciais obtidas por um aluno numa disciplina ao longo de um semestre, 
	// e calcule a sua média. A atribuição de conceitos obedece a tabela abaixo:
		
	// | Média de aproveitamento         Conceito|
	// | Entre 9.0 e 10.0                   A    |
	// | Entre 7.5 e 9.0                    B    |
	// | Entre 6.0 e 7.5                    C    |
	// | Entre 4.0 e 6.0                    D    |
	// | Entre 4.0 e 0.0                    E    |
	//
	// O algoritmo deve mostrar na tela as notas, a média ,
	// o conceito correspondente e a mensagem "APROVADO" se o conceito for A, B ou C, e "REPROVADO" se o conceito for D ou E. 
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas parciais do aluno:");
		double primeiraNota = scan.nextDouble();
		double segundaNota = scan.nextDouble();
		double media = primeiraNota + segundaNota / 2;
		
		if(media >= 9) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: A");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 9 && media >= 7.5) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: B");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 7.5 && media >= 6) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: C");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 6 && media >= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: D");
			System.out.println("Aluno(a) foi: Reprovado");
		}else(media <= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: E");
			System.out.println("Aluno(a) foi: Reprovado");
		}
	}}	 
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-03-03 19:32:42.177
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-03-03 19:32:42.177
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-03-03 19:32:42.187
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Exercicios_Java_Aulas_14_15 {
	
	public static void main(String[] args) {
		
	
	
	// 1. Faça um programa que peça dois número e imprima o maior deles.
	
	/* Scanner scan = new Scanner(System.in);
	System.out.println("Entre com dois números inteiros: ");
	
	int num1 = scan.nextInt();
	int num2 = scan.nextInt();
	
	if (num1 > num2) {
	System.out.println("O maior número é: " + num1);
	} else if (num1 < num2) {
		System.out.println("O maior número é: " + num2);
	}}

	// 2. Faça um programa que peça um valor e mostre na tela se o valor é positivo ou negativo. 

		Scanner scan = new Scanner(System.in);
		double numero = scan.nextDouble();
		
		if (numero < 0) {
			System.out.println("Número negativo");
		} else if (numero >= 0){
			System.out.println("Número positivo");
		}
		
		
		
	// 3. Faça um programa que verifique se uma letra digitada é "F", "M" ou "NB".
	// Conforme a letra escrever: F - Feminino, M - Masculino, NB - Não Binário.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Informe o sexo com 'F', 'M', 'NB':");
		String sexo = scan.nextLine();
		
		switch(sexo){
		case "F": System.out.println("F - Feminino");
		break;
		case "M": System.out.println("M- Masculino");
		break;
		case "NB": System.out.println("NB - Não Binário");
		break;
		default: System.out.println("Informação inválida");
		} 
		
	// 4. Faça um programa que verifique se uma letra digitada é vogal ou consoante.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Digite uma letra:");
		String letra = scan.next();
		
		switch(letra) {
		case "a": ;
		case "e": ; 
		case "i": ;
		case "o": ; 
		case "u": System.out.println("Vogal");
		break;
		default: System.out.println("Consoante ou numeral");
		}
		
		
	// 5. Faça um programa para leitura de duas notas parciais de um aluno.
	// O programa deve calcular a média alcançada por aluno e apresentar:
	// - A mensagem "Aprovado" se a média for maior ou igual a 7.
	// - A mensagem "Reprovado" se a média alcança for menor que 7.
	// - A mensagem "Aprovado com Distinção" se a média alcançada for igual a 10.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas do(a) aluno(a):");
		double nota1 = scan.nextDouble();
		double nota2 = scan.nextDouble();
		double media = (nota1 + nota2) / 2;
		
		if(media >= 7 && media < 9 ) {
			System.out.println("Aprovado.");
		}else if (media == 10){
			System.out.println("Aprovado com Distinção!");
		}else {
			System.out.println("Reprovado.");
		}
		
		
	// 6 . Faça um programa que leia três números e mostre o maior deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if(num1 > num2 && num1 > num3) {
			System.out.println("O maior número é: " + num1);
		}else if(num2 > num1 && num2 > num3) {
			System.out.println("O maior número é: " + num2);
		}else {
			System.out.println("O maior número é: " + num3);
		}
		
		
	// 7. Faça um programa que leia três número e mostre o maior e menor deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1 > num2 && num1 > num3 && num2 > num3) {
			System.out.println("O maior número é: " + num1);
			System.out.println("O menor número é: " + num3);
		} else if (num2 > num1 && num2 > num3 && num3 > num1) {
			System.out.println("O maior número é: " + num2);
			System.out.println("O menor número é: " + num1);
		} else if (num3 > num1 && num3 > num2 && num2 > num1) {
			System.out.println("O maior número é: " + num3);
			System.out.println("O menor número é:" + num1);
		}
		

		
	// 8. Faça um programa que pergunte o preço dos três produtos e 
	//	informe qual produto você deve comprar, sabendo que a decisão é sempre pelo mais barato.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe os valores dos três produtos:");
		double prod1 = scan.nextDouble();
		double prod2 = scan.nextDouble();
		double prod3 = scan.nextDouble();
		
		if (prod1 < prod2 && prod1 < prod3) {
			System.out.println("O produto com menor preço é: " + prod1);
		}else if(prod2 < prod1 && prod2 < prod3) {
			System.out.println("O produto com menor preço é: " + prod2);
		}else {
			System.out.println("O produto com menor preço é: " + prod3);
		}
		
		
		
	// 9. Faça um programa que leia três números e mostre-os em ordem descrescente:
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Entre com três números");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1> num2 && num1 > num3 && num2 > num3) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num2 + ", " + num3 +  ".");
		}else if (num2> num1 && num2 > num3 && num1 > num3) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num1 + ", " + num3 + ".");
		}else if (num3> num1 && num3 > num2 && num2 > num1) {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num2 + ", " + num1 + ".");
		}else if (num2 > num3 && num2 > num1 && num3 > num1) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num3 + ", " + num1 + ".");
		}else if(num1 > num2 && num1 > num3 && num3 > num2) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num3 + ", " + num2 + ".");
		}else {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num1 + ", " + num2 + ".");
		}
		
		
		
	// 10. Faça um programa que pergunte em que turno você estuda.
	// Peça para digitar M - Matutino, V - Vespertino, ou N - Noturno. Imprima a mensagem "Bom dia!",
	// "Boa tarde!" ou "Boa noite!" ou "Valor inválido", conforme o caso.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o turno em que você estudo com 'M' para matunino," + 
		"'V' para vespertino e 'N' para noturno:");
		String turno = scan.next();
		
		switch(turno) {
		case "M": System.out.println("Bom dia!");
		break;
		case "V": System.out.println("Boa tarde!");
		break;
		case "N": System.out.println("Boa noite!");
		break;
		default: System.out.println("Valor inválido");
		}
		
		
	// 11. As Organizações Tabajara  resolveram dar um aumento de salário aos seus colaboradores
	// e lhe contrataram  para desenvolver o programa que calculará os reajustes.
	//  Faça um programa que receba o salário de um colaborador e o reajuste segundo o seguinte critério , baseado no salário atual:
	// - Salários até R$280,00 (incluindo): aumento de 20%
	// - Salários entre R$280,00 e R$700,00: aumento de 15% 
	// - Salários entre R$700,00 e R$ 1.500,00: aumento de 10%
	// - Salários acima de R$1.500,00 em diante: aumento de 5%.
	// Após o aumento ter sido realizado, informe na tela: 
	// - O Salário antes do reajuste;
	// - O percentual de aumento  aplicado ;
	// - O valor do aumento;
	// - O novo salário após o aumento;
		
	Scanner scan = new Scanner(System.in);
	System.out.println("Informe o valor do salário ao qual será aplicado o aumento:");
	
	
	float salario = scan.nextFloat();
	float vintePercentual = 20 / 100;
	float quinzePercentual = 15 / 100;
	float dezPercentual = 10 / 100;
	float cincoPercentual = 5 / 100;
	float valorAcrescido;
	float valorFinal;
	
	
	if ( salario <= 280.00) {
		valorFinal = salario + (vintePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 20%");
		valorAcrescido = vintePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);	
	} else if (salario > 280.00 || salario < 700.00) {
		valorFinal = salario + (quinzePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 15%");
		valorAcrescido = quinzePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	} else if (salario > 700.00 || salario < 1500.00) {
		valorFinal = salario + (dezPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 10%");
		valorAcrescido = dezPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	}else {
		valorFinal = salario + (cincoPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 5%");
		valorAcrescido = cincoPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);

	} 
		
	// 12. Faça um programa para o cálculo de uma folha de pagamento sabendo que os descontos são de Impostos de Renda,
	// que depende do salário bruto (conforme tabela abaixo) e 3% para o Sindicato e que o FGTS corresponde a 11% do
	// Salário Bruto menos os descontos. O programa deverá pedir ao usuário o valor da sua hora e a quantidade de horas
	// trabalhadas no mês.
	// - Desconto do IR:
	// - Salario Bruto até R$: 900 (inclusive) - isento.
	// - Salario Bruto até R$: 1500 (inclusive) - desconto de 5%.
	// - Salario Bruto até R$: 2500 (inclusive) - desconto de 10%.
	// - Salario Bruto acima de R$: 2500 - desconto de 20%.
	// - Imprima na tela as informações, dispostas conforme o exemplo abaixo.
	// No exemplo o valor da hora é de R$:5 e as quantidade de horas trabalhadas é de 220. 
		
	// |Salário Bruto: (5*220)    	= R$: 1.100,00|
	// |(-) IR (5%)                 = R$:    55,00|
	// |(-) INSS (10%)              = R$:   110,00|
	// |FGTS (11%)                  = R$:   121,00|
	// |Total de Descontos          = R$:   165,00|
	// |Salário Liquido             = R$:   935,00|
		
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o valor do salário por hora seguido pelo número de horas trabalhadas no mês:");
		
		double salarioHora = scan.nextDouble();
		double horaMes = scan.nextDouble();
		double salarioMes = salarioHora * horaMes;
		double ir5 =  (5 / 100);
		double ir10 =  (10 / 100);
		double ir20 =  (20 / 100);
		double inss =  (10/100);
		double fgts = (11/100);
		
		if(salarioMes <= 900) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + "Isento");
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 900 && salarioMes <= 1500 ) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir5 *salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 1500 && salarioMes <= 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir10*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir20*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else {
			System.out.println("Valores inválidos");
		} 
		
	// 13. Faça um programa que leia um número e exiba o dia correspondente da semana. (1-Domingo, 2-Segunda, etc...), 
	// se digitar outro valor, deve aparecer, valor inválido.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Digite um número de 1 a 7 correspondente a um dia da semana.");
		
		int dia = scan.nextInt();
		
		switch(dia) {
		case 1: System.out.println("Domingo");
		break;
		case 2: System.out.println("Segunda");
		break;
		case 3: System.out.println("Terça");
		break;
		case 4: System.out.println("Quarta");
		break;
		case 5: System.out.println("Quinta");
		break;
		case 6: System.out.println("Sexta");
		break;
		case 7: System.out.println("Sábado");
		break;
		default:System.out.println("Valor inválido");
		}
		*/
	// 14. Faça um programa que lê as duas notas parciais obtidas por um aluno numa disciplina ao longo de um semestre, 
	// e calcule a sua média. A atribuição de conceitos obedece a tabela abaixo:
		
	// | Média de aproveitamento         Conceito|
	// | Entre 9.0 e 10.0                   A    |
	// | Entre 7.5 e 9.0                    B    |
	// | Entre 6.0 e 7.5                    C    |
	// | Entre 4.0 e 6.0                    D    |
	// | Entre 4.0 e 0.0                    E    |
	//
	// O algoritmo deve mostrar na tela as notas, a média ,
	// o conceito correspondente e a mensagem "APROVADO" se o conceito for A, B ou C, e "REPROVADO" se o conceito for D ou E. 
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas parciais do aluno:");
		double primeiraNota = scan.nextDouble();
		double segundaNota = scan.nextDouble();
		double media = primeiraNota + segundaNota / 2;
		
		if(media >= 9) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: A");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 9 && media >= 7.5) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: B");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 7.5 && media >= 6) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: C");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 6 && media >= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: D");
			System.out.println("Aluno(a) foi: Reprovado");
		}else(media <= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: E");
			System.out.println("Aluno(a) foi: Reprovado");
		}
	}}	 
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-03-03 19:32:42.187
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-03-03 19:32:42.188
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-03-03 19:32:42.213
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Exercicios_Java_Aulas_14_15 {
	
	public static void main(String[] args) {
		
	
	
	// 1. Faça um programa que peça dois número e imprima o maior deles.
	
	/* Scanner scan = new Scanner(System.in);
	System.out.println("Entre com dois números inteiros: ");
	
	int num1 = scan.nextInt();
	int num2 = scan.nextInt();
	
	if (num1 > num2) {
	System.out.println("O maior número é: " + num1);
	} else if (num1 < num2) {
		System.out.println("O maior número é: " + num2);
	}}

	// 2. Faça um programa que peça um valor e mostre na tela se o valor é positivo ou negativo. 

		Scanner scan = new Scanner(System.in);
		double numero = scan.nextDouble();
		
		if (numero < 0) {
			System.out.println("Número negativo");
		} else if (numero >= 0){
			System.out.println("Número positivo");
		}
		
		
		
	// 3. Faça um programa que verifique se uma letra digitada é "F", "M" ou "NB".
	// Conforme a letra escrever: F - Feminino, M - Masculino, NB - Não Binário.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Informe o sexo com 'F', 'M', 'NB':");
		String sexo = scan.nextLine();
		
		switch(sexo){
		case "F": System.out.println("F - Feminino");
		break;
		case "M": System.out.println("M- Masculino");
		break;
		case "NB": System.out.println("NB - Não Binário");
		break;
		default: System.out.println("Informação inválida");
		} 
		
	// 4. Faça um programa que verifique se uma letra digitada é vogal ou consoante.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Digite uma letra:");
		String letra = scan.next();
		
		switch(letra) {
		case "a": ;
		case "e": ; 
		case "i": ;
		case "o": ; 
		case "u": System.out.println("Vogal");
		break;
		default: System.out.println("Consoante ou numeral");
		}
		
		
	// 5. Faça um programa para leitura de duas notas parciais de um aluno.
	// O programa deve calcular a média alcançada por aluno e apresentar:
	// - A mensagem "Aprovado" se a média for maior ou igual a 7.
	// - A mensagem "Reprovado" se a média alcança for menor que 7.
	// - A mensagem "Aprovado com Distinção" se a média alcançada for igual a 10.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas do(a) aluno(a):");
		double nota1 = scan.nextDouble();
		double nota2 = scan.nextDouble();
		double media = (nota1 + nota2) / 2;
		
		if(media >= 7 && media < 9 ) {
			System.out.println("Aprovado.");
		}else if (media == 10){
			System.out.println("Aprovado com Distinção!");
		}else {
			System.out.println("Reprovado.");
		}
		
		
	// 6 . Faça um programa que leia três números e mostre o maior deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if(num1 > num2 && num1 > num3) {
			System.out.println("O maior número é: " + num1);
		}else if(num2 > num1 && num2 > num3) {
			System.out.println("O maior número é: " + num2);
		}else {
			System.out.println("O maior número é: " + num3);
		}
		
		
	// 7. Faça um programa que leia três número e mostre o maior e menor deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1 > num2 && num1 > num3 && num2 > num3) {
			System.out.println("O maior número é: " + num1);
			System.out.println("O menor número é: " + num3);
		} else if (num2 > num1 && num2 > num3 && num3 > num1) {
			System.out.println("O maior número é: " + num2);
			System.out.println("O menor número é: " + num1);
		} else if (num3 > num1 && num3 > num2 && num2 > num1) {
			System.out.println("O maior número é: " + num3);
			System.out.println("O menor número é:" + num1);
		}
		

		
	// 8. Faça um programa que pergunte o preço dos três produtos e 
	//	informe qual produto você deve comprar, sabendo que a decisão é sempre pelo mais barato.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe os valores dos três produtos:");
		double prod1 = scan.nextDouble();
		double prod2 = scan.nextDouble();
		double prod3 = scan.nextDouble();
		
		if (prod1 < prod2 && prod1 < prod3) {
			System.out.println("O produto com menor preço é: " + prod1);
		}else if(prod2 < prod1 && prod2 < prod3) {
			System.out.println("O produto com menor preço é: " + prod2);
		}else {
			System.out.println("O produto com menor preço é: " + prod3);
		}
		
		
		
	// 9. Faça um programa que leia três números e mostre-os em ordem descrescente:
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Entre com três números");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1> num2 && num1 > num3 && num2 > num3) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num2 + ", " + num3 +  ".");
		}else if (num2> num1 && num2 > num3 && num1 > num3) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num1 + ", " + num3 + ".");
		}else if (num3> num1 && num3 > num2 && num2 > num1) {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num2 + ", " + num1 + ".");
		}else if (num2 > num3 && num2 > num1 && num3 > num1) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num3 + ", " + num1 + ".");
		}else if(num1 > num2 && num1 > num3 && num3 > num2) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num3 + ", " + num2 + ".");
		}else {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num1 + ", " + num2 + ".");
		}
		
		
		
	// 10. Faça um programa que pergunte em que turno você estuda.
	// Peça para digitar M - Matutino, V - Vespertino, ou N - Noturno. Imprima a mensagem "Bom dia!",
	// "Boa tarde!" ou "Boa noite!" ou "Valor inválido", conforme o caso.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o turno em que você estudo com 'M' para matunino," + 
		"'V' para vespertino e 'N' para noturno:");
		String turno = scan.next();
		
		switch(turno) {
		case "M": System.out.println("Bom dia!");
		break;
		case "V": System.out.println("Boa tarde!");
		break;
		case "N": System.out.println("Boa noite!");
		break;
		default: System.out.println("Valor inválido");
		}
		
		
	// 11. As Organizações Tabajara  resolveram dar um aumento de salário aos seus colaboradores
	// e lhe contrataram  para desenvolver o programa que calculará os reajustes.
	//  Faça um programa que receba o salário de um colaborador e o reajuste segundo o seguinte critério , baseado no salário atual:
	// - Salários até R$280,00 (incluindo): aumento de 20%
	// - Salários entre R$280,00 e R$700,00: aumento de 15% 
	// - Salários entre R$700,00 e R$ 1.500,00: aumento de 10%
	// - Salários acima de R$1.500,00 em diante: aumento de 5%.
	// Após o aumento ter sido realizado, informe na tela: 
	// - O Salário antes do reajuste;
	// - O percentual de aumento  aplicado ;
	// - O valor do aumento;
	// - O novo salário após o aumento;
		
	Scanner scan = new Scanner(System.in);
	System.out.println("Informe o valor do salário ao qual será aplicado o aumento:");
	
	
	float salario = scan.nextFloat();
	float vintePercentual = 20 / 100;
	float quinzePercentual = 15 / 100;
	float dezPercentual = 10 / 100;
	float cincoPercentual = 5 / 100;
	float valorAcrescido;
	float valorFinal;
	
	
	if ( salario <= 280.00) {
		valorFinal = salario + (vintePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 20%");
		valorAcrescido = vintePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);	
	} else if (salario > 280.00 || salario < 700.00) {
		valorFinal = salario + (quinzePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 15%");
		valorAcrescido = quinzePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	} else if (salario > 700.00 || salario < 1500.00) {
		valorFinal = salario + (dezPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 10%");
		valorAcrescido = dezPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	}else {
		valorFinal = salario + (cincoPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 5%");
		valorAcrescido = cincoPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);

	} 
		
	// 12. Faça um programa para o cálculo de uma folha de pagamento sabendo que os descontos são de Impostos de Renda,
	// que depende do salário bruto (conforme tabela abaixo) e 3% para o Sindicato e que o FGTS corresponde a 11% do
	// Salário Bruto menos os descontos. O programa deverá pedir ao usuário o valor da sua hora e a quantidade de horas
	// trabalhadas no mês.
	// - Desconto do IR:
	// - Salario Bruto até R$: 900 (inclusive) - isento.
	// - Salario Bruto até R$: 1500 (inclusive) - desconto de 5%.
	// - Salario Bruto até R$: 2500 (inclusive) - desconto de 10%.
	// - Salario Bruto acima de R$: 2500 - desconto de 20%.
	// - Imprima na tela as informações, dispostas conforme o exemplo abaixo.
	// No exemplo o valor da hora é de R$:5 e as quantidade de horas trabalhadas é de 220. 
		
	// |Salário Bruto: (5*220)    	= R$: 1.100,00|
	// |(-) IR (5%)                 = R$:    55,00|
	// |(-) INSS (10%)              = R$:   110,00|
	// |FGTS (11%)                  = R$:   121,00|
	// |Total de Descontos          = R$:   165,00|
	// |Salário Liquido             = R$:   935,00|
		
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o valor do salário por hora seguido pelo número de horas trabalhadas no mês:");
		
		double salarioHora = scan.nextDouble();
		double horaMes = scan.nextDouble();
		double salarioMes = salarioHora * horaMes;
		double ir5 =  (5 / 100);
		double ir10 =  (10 / 100);
		double ir20 =  (20 / 100);
		double inss =  (10/100);
		double fgts = (11/100);
		
		if(salarioMes <= 900) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + "Isento");
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 900 && salarioMes <= 1500 ) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir5 *salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 1500 && salarioMes <= 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir10*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir20*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else {
			System.out.println("Valores inválidos");
		} 
		
	// 13. Faça um programa que leia um número e exiba o dia correspondente da semana. (1-Domingo, 2-Segunda, etc...), 
	// se digitar outro valor, deve aparecer, valor inválido.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Digite um número de 1 a 7 correspondente a um dia da semana.");
		
		int dia = scan.nextInt();
		
		switch(dia) {
		case 1: System.out.println("Domingo");
		break;
		case 2: System.out.println("Segunda");
		break;
		case 3: System.out.println("Terça");
		break;
		case 4: System.out.println("Quarta");
		break;
		case 5: System.out.println("Quinta");
		break;
		case 6: System.out.println("Sexta");
		break;
		case 7: System.out.println("Sábado");
		break;
		default:System.out.println("Valor inválido");
		}
		*/
	// 14. Faça um programa que lê as duas notas parciais obtidas por um aluno numa disciplina ao longo de um semestre, 
	// e calcule a sua média. A atribuição de conceitos obedece a tabela abaixo:
		
	// | Média de aproveitamento         Conceito|
	// | Entre 9.0 e 10.0                   A    |
	// | Entre 7.5 e 9.0                    B    |
	// | Entre 6.0 e 7.5                    C    |
	// | Entre 4.0 e 6.0                    D    |
	// | Entre 4.0 e 0.0                    E    |
	//
	// O algoritmo deve mostrar na tela as notas, a média ,
	// o conceito correspondente e a mensagem "APROVADO" se o conceito for A, B ou C, e "REPROVADO" se o conceito for D ou E. 
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas parciais do aluno:");
		double primeiraNota = scan.nextDouble();
		double segundaNota = scan.nextDouble();
		double media = primeiraNota + segundaNota / 2;
		
		if(media >= 9) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: A");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 9 && media >= 7.5) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: B");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 7.5 && media >= 6) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: C");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 6 && media >= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: D");
			System.out.println("Aluno(a) foi: Reprovado");
		}else(media <= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: E");
			System.out.println("Aluno(a) foi: Reprovado");
		}
	}}	 
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-03-03 19:32:42.214
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-03-03 19:32:42.215
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-03-03 19:32:43.688
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Exercicios_Java_Aulas_14_15 {
	
	public static void main(String[] args) {
		
	
	
	// 1. Faça um programa que peça dois número e imprima o maior deles.
	
	/* Scanner scan = new Scanner(System.in);
	System.out.println("Entre com dois números inteiros: ");
	
	int num1 = scan.nextInt();
	int num2 = scan.nextInt();
	
	if (num1 > num2) {
	System.out.println("O maior número é: " + num1);
	} else if (num1 < num2) {
		System.out.println("O maior número é: " + num2);
	}}

	// 2. Faça um programa que peça um valor e mostre na tela se o valor é positivo ou negativo. 

		Scanner scan = new Scanner(System.in);
		double numero = scan.nextDouble();
		
		if (numero < 0) {
			System.out.println("Número negativo");
		} else if (numero >= 0){
			System.out.println("Número positivo");
		}
		
		
		
	// 3. Faça um programa que verifique se uma letra digitada é "F", "M" ou "NB".
	// Conforme a letra escrever: F - Feminino, M - Masculino, NB - Não Binário.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Informe o sexo com 'F', 'M', 'NB':");
		String sexo = scan.nextLine();
		
		switch(sexo){
		case "F": System.out.println("F - Feminino");
		break;
		case "M": System.out.println("M- Masculino");
		break;
		case "NB": System.out.println("NB - Não Binário");
		break;
		default: System.out.println("Informação inválida");
		} 
		
	// 4. Faça um programa que verifique se uma letra digitada é vogal ou consoante.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Digite uma letra:");
		String letra = scan.next();
		
		switch(letra) {
		case "a": ;
		case "e": ; 
		case "i": ;
		case "o": ; 
		case "u": System.out.println("Vogal");
		break;
		default: System.out.println("Consoante ou numeral");
		}
		
		
	// 5. Faça um programa para leitura de duas notas parciais de um aluno.
	// O programa deve calcular a média alcançada por aluno e apresentar:
	// - A mensagem "Aprovado" se a média for maior ou igual a 7.
	// - A mensagem "Reprovado" se a média alcança for menor que 7.
	// - A mensagem "Aprovado com Distinção" se a média alcançada for igual a 10.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas do(a) aluno(a):");
		double nota1 = scan.nextDouble();
		double nota2 = scan.nextDouble();
		double media = (nota1 + nota2) / 2;
		
		if(media >= 7 && media < 9 ) {
			System.out.println("Aprovado.");
		}else if (media == 10){
			System.out.println("Aprovado com Distinção!");
		}else {
			System.out.println("Reprovado.");
		}
		
		
	// 6 . Faça um programa que leia três números e mostre o maior deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if(num1 > num2 && num1 > num3) {
			System.out.println("O maior número é: " + num1);
		}else if(num2 > num1 && num2 > num3) {
			System.out.println("O maior número é: " + num2);
		}else {
			System.out.println("O maior número é: " + num3);
		}
		
		
	// 7. Faça um programa que leia três número e mostre o maior e menor deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1 > num2 && num1 > num3 && num2 > num3) {
			System.out.println("O maior número é: " + num1);
			System.out.println("O menor número é: " + num3);
		} else if (num2 > num1 && num2 > num3 && num3 > num1) {
			System.out.println("O maior número é: " + num2);
			System.out.println("O menor número é: " + num1);
		} else if (num3 > num1 && num3 > num2 && num2 > num1) {
			System.out.println("O maior número é: " + num3);
			System.out.println("O menor número é:" + num1);
		}
		

		
	// 8. Faça um programa que pergunte o preço dos três produtos e 
	//	informe qual produto você deve comprar, sabendo que a decisão é sempre pelo mais barato.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe os valores dos três produtos:");
		double prod1 = scan.nextDouble();
		double prod2 = scan.nextDouble();
		double prod3 = scan.nextDouble();
		
		if (prod1 < prod2 && prod1 < prod3) {
			System.out.println("O produto com menor preço é: " + prod1);
		}else if(prod2 < prod1 && prod2 < prod3) {
			System.out.println("O produto com menor preço é: " + prod2);
		}else {
			System.out.println("O produto com menor preço é: " + prod3);
		}
		
		
		
	// 9. Faça um programa que leia três números e mostre-os em ordem descrescente:
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Entre com três números");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1> num2 && num1 > num3 && num2 > num3) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num2 + ", " + num3 +  ".");
		}else if (num2> num1 && num2 > num3 && num1 > num3) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num1 + ", " + num3 + ".");
		}else if (num3> num1 && num3 > num2 && num2 > num1) {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num2 + ", " + num1 + ".");
		}else if (num2 > num3 && num2 > num1 && num3 > num1) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num3 + ", " + num1 + ".");
		}else if(num1 > num2 && num1 > num3 && num3 > num2) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num3 + ", " + num2 + ".");
		}else {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num1 + ", " + num2 + ".");
		}
		
		
		
	// 10. Faça um programa que pergunte em que turno você estuda.
	// Peça para digitar M - Matutino, V - Vespertino, ou N - Noturno. Imprima a mensagem "Bom dia!",
	// "Boa tarde!" ou "Boa noite!" ou "Valor inválido", conforme o caso.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o turno em que você estudo com 'M' para matunino," + 
		"'V' para vespertino e 'N' para noturno:");
		String turno = scan.next();
		
		switch(turno) {
		case "M": System.out.println("Bom dia!");
		break;
		case "V": System.out.println("Boa tarde!");
		break;
		case "N": System.out.println("Boa noite!");
		break;
		default: System.out.println("Valor inválido");
		}
		
		
	// 11. As Organizações Tabajara  resolveram dar um aumento de salário aos seus colaboradores
	// e lhe contrataram  para desenvolver o programa que calculará os reajustes.
	//  Faça um programa que receba o salário de um colaborador e o reajuste segundo o seguinte critério , baseado no salário atual:
	// - Salários até R$280,00 (incluindo): aumento de 20%
	// - Salários entre R$280,00 e R$700,00: aumento de 15% 
	// - Salários entre R$700,00 e R$ 1.500,00: aumento de 10%
	// - Salários acima de R$1.500,00 em diante: aumento de 5%.
	// Após o aumento ter sido realizado, informe na tela: 
	// - O Salário antes do reajuste;
	// - O percentual de aumento  aplicado ;
	// - O valor do aumento;
	// - O novo salário após o aumento;
		
	Scanner scan = new Scanner(System.in);
	System.out.println("Informe o valor do salário ao qual será aplicado o aumento:");
	
	
	float salario = scan.nextFloat();
	float vintePercentual = 20 / 100;
	float quinzePercentual = 15 / 100;
	float dezPercentual = 10 / 100;
	float cincoPercentual = 5 / 100;
	float valorAcrescido;
	float valorFinal;
	
	
	if ( salario <= 280.00) {
		valorFinal = salario + (vintePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 20%");
		valorAcrescido = vintePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);	
	} else if (salario > 280.00 || salario < 700.00) {
		valorFinal = salario + (quinzePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 15%");
		valorAcrescido = quinzePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	} else if (salario > 700.00 || salario < 1500.00) {
		valorFinal = salario + (dezPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 10%");
		valorAcrescido = dezPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	}else {
		valorFinal = salario + (cincoPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 5%");
		valorAcrescido = cincoPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);

	} 
		
	// 12. Faça um programa para o cálculo de uma folha de pagamento sabendo que os descontos são de Impostos de Renda,
	// que depende do salário bruto (conforme tabela abaixo) e 3% para o Sindicato e que o FGTS corresponde a 11% do
	// Salário Bruto menos os descontos. O programa deverá pedir ao usuário o valor da sua hora e a quantidade de horas
	// trabalhadas no mês.
	// - Desconto do IR:
	// - Salario Bruto até R$: 900 (inclusive) - isento.
	// - Salario Bruto até R$: 1500 (inclusive) - desconto de 5%.
	// - Salario Bruto até R$: 2500 (inclusive) - desconto de 10%.
	// - Salario Bruto acima de R$: 2500 - desconto de 20%.
	// - Imprima na tela as informações, dispostas conforme o exemplo abaixo.
	// No exemplo o valor da hora é de R$:5 e as quantidade de horas trabalhadas é de 220. 
		
	// |Salário Bruto: (5*220)    	= R$: 1.100,00|
	// |(-) IR (5%)                 = R$:    55,00|
	// |(-) INSS (10%)              = R$:   110,00|
	// |FGTS (11%)                  = R$:   121,00|
	// |Total de Descontos          = R$:   165,00|
	// |Salário Liquido             = R$:   935,00|
		
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o valor do salário por hora seguido pelo número de horas trabalhadas no mês:");
		
		double salarioHora = scan.nextDouble();
		double horaMes = scan.nextDouble();
		double salarioMes = salarioHora * horaMes;
		double ir5 =  (5 / 100);
		double ir10 =  (10 / 100);
		double ir20 =  (20 / 100);
		double inss =  (10/100);
		double fgts = (11/100);
		
		if(salarioMes <= 900) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + "Isento");
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 900 && salarioMes <= 1500 ) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir5 *salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 1500 && salarioMes <= 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir10*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir20*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else {
			System.out.println("Valores inválidos");
		} 
		
	// 13. Faça um programa que leia um número e exiba o dia correspondente da semana. (1-Domingo, 2-Segunda, etc...), 
	// se digitar outro valor, deve aparecer, valor inválido.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Digite um número de 1 a 7 correspondente a um dia da semana.");
		
		int dia = scan.nextInt();
		
		switch(dia) {
		case 1: System.out.println("Domingo");
		break;
		case 2: System.out.println("Segunda");
		break;
		case 3: System.out.println("Terça");
		break;
		case 4: System.out.println("Quarta");
		break;
		case 5: System.out.println("Quinta");
		break;
		case 6: System.out.println("Sexta");
		break;
		case 7: System.out.println("Sábado");
		break;
		default:System.out.println("Valor inválido");
		}
		*/
	// 14. Faça um programa que lê as duas notas parciais obtidas por um aluno numa disciplina ao longo de um semestre, 
	// e calcule a sua média. A atribuição de conceitos obedece a tabela abaixo:
		
	// | Média de aproveitamento         Conceito|
	// | Entre 9.0 e 10.0                   A    |
	// | Entre 7.5 e 9.0                    B    |
	// | Entre 6.0 e 7.5                    C    |
	// | Entre 4.0 e 6.0                    D    |
	// | Entre 4.0 e 0.0                    E    |
	//
	// O algoritmo deve mostrar na tela as notas, a média ,
	// o conceito correspondente e a mensagem "APROVADO" se o conceito for A, B ou C, e "REPROVADO" se o conceito for D ou E. 
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas parciais do aluno:");
		double primeiraNota = scan.nextDouble();
		double segundaNota = scan.nextDouble();
		double media = primeiraNota + segundaNota / 2;
		
		if(media >= 9) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: A");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 9 && media >= 7.5) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: B");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 7.5 && media >= 6) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: C");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 6 && media >= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: D");
			System.out.println("Aluno(a) foi: Reprovado");
		}else(media <= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: E");
			System.out.println("Aluno(a) foi: Reprovado");
		}
	}}	 
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-03-03 19:32:43.689
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-03-03 19:32:43.690
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-03-03 19:32:50.870
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Exercicios_Java_Aulas_14_15 {
	
	public static void main(String[] args) {
		
	
	
	// 1. Faça um programa que peça dois número e imprima o maior deles.
	
	/* Scanner scan = new Scanner(System.in);
	System.out.println("Entre com dois números inteiros: ");
	
	int num1 = scan.nextInt();
	int num2 = scan.nextInt();
	
	if (num1 > num2) {
	System.out.println("O maior número é: " + num1);
	} else if (num1 < num2) {
		System.out.println("O maior número é: " + num2);
	}}

	// 2. Faça um programa que peça um valor e mostre na tela se o valor é positivo ou negativo. 

		Scanner scan = new Scanner(System.in);
		double numero = scan.nextDouble();
		
		if (numero < 0) {
			System.out.println("Número negativo");
		} else if (numero >= 0){
			System.out.println("Número positivo");
		}
		
		
		
	// 3. Faça um programa que verifique se uma letra digitada é "F", "M" ou "NB".
	// Conforme a letra escrever: F - Feminino, M - Masculino, NB - Não Binário.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Informe o sexo com 'F', 'M', 'NB':");
		String sexo = scan.nextLine();
		
		switch(sexo){
		case "F": System.out.println("F - Feminino");
		break;
		case "M": System.out.println("M- Masculino");
		break;
		case "NB": System.out.println("NB - Não Binário");
		break;
		default: System.out.println("Informação inválida");
		} 
		
	// 4. Faça um programa que verifique se uma letra digitada é vogal ou consoante.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Digite uma letra:");
		String letra = scan.next();
		
		switch(letra) {
		case "a": ;
		case "e": ; 
		case "i": ;
		case "o": ; 
		case "u": System.out.println("Vogal");
		break;
		default: System.out.println("Consoante ou numeral");
		}
		
		
	// 5. Faça um programa para leitura de duas notas parciais de um aluno.
	// O programa deve calcular a média alcançada por aluno e apresentar:
	// - A mensagem "Aprovado" se a média for maior ou igual a 7.
	// - A mensagem "Reprovado" se a média alcança for menor que 7.
	// - A mensagem "Aprovado com Distinção" se a média alcançada for igual a 10.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas do(a) aluno(a):");
		double nota1 = scan.nextDouble();
		double nota2 = scan.nextDouble();
		double media = (nota1 + nota2) / 2;
		
		if(media >= 7 && media < 9 ) {
			System.out.println("Aprovado.");
		}else if (media == 10){
			System.out.println("Aprovado com Distinção!");
		}else {
			System.out.println("Reprovado.");
		}
		
		
	// 6 . Faça um programa que leia três números e mostre o maior deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if(num1 > num2 && num1 > num3) {
			System.out.println("O maior número é: " + num1);
		}else if(num2 > num1 && num2 > num3) {
			System.out.println("O maior número é: " + num2);
		}else {
			System.out.println("O maior número é: " + num3);
		}
		
		
	// 7. Faça um programa que leia três número e mostre o maior e menor deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1 > num2 && num1 > num3 && num2 > num3) {
			System.out.println("O maior número é: " + num1);
			System.out.println("O menor número é: " + num3);
		} else if (num2 > num1 && num2 > num3 && num3 > num1) {
			System.out.println("O maior número é: " + num2);
			System.out.println("O menor número é: " + num1);
		} else if (num3 > num1 && num3 > num2 && num2 > num1) {
			System.out.println("O maior número é: " + num3);
			System.out.println("O menor número é:" + num1);
		}
		

		
	// 8. Faça um programa que pergunte o preço dos três produtos e 
	//	informe qual produto você deve comprar, sabendo que a decisão é sempre pelo mais barato.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe os valores dos três produtos:");
		double prod1 = scan.nextDouble();
		double prod2 = scan.nextDouble();
		double prod3 = scan.nextDouble();
		
		if (prod1 < prod2 && prod1 < prod3) {
			System.out.println("O produto com menor preço é: " + prod1);
		}else if(prod2 < prod1 && prod2 < prod3) {
			System.out.println("O produto com menor preço é: " + prod2);
		}else {
			System.out.println("O produto com menor preço é: " + prod3);
		}
		
		
		
	// 9. Faça um programa que leia três números e mostre-os em ordem descrescente:
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Entre com três números");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1> num2 && num1 > num3 && num2 > num3) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num2 + ", " + num3 +  ".");
		}else if (num2> num1 && num2 > num3 && num1 > num3) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num1 + ", " + num3 + ".");
		}else if (num3> num1 && num3 > num2 && num2 > num1) {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num2 + ", " + num1 + ".");
		}else if (num2 > num3 && num2 > num1 && num3 > num1) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num3 + ", " + num1 + ".");
		}else if(num1 > num2 && num1 > num3 && num3 > num2) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num3 + ", " + num2 + ".");
		}else {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num1 + ", " + num2 + ".");
		}
		
		
		
	// 10. Faça um programa que pergunte em que turno você estuda.
	// Peça para digitar M - Matutino, V - Vespertino, ou N - Noturno. Imprima a mensagem "Bom dia!",
	// "Boa tarde!" ou "Boa noite!" ou "Valor inválido", conforme o caso.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o turno em que você estudo com 'M' para matunino," + 
		"'V' para vespertino e 'N' para noturno:");
		String turno = scan.next();
		
		switch(turno) {
		case "M": System.out.println("Bom dia!");
		break;
		case "V": System.out.println("Boa tarde!");
		break;
		case "N": System.out.println("Boa noite!");
		break;
		default: System.out.println("Valor inválido");
		}
		
		
	// 11. As Organizações Tabajara  resolveram dar um aumento de salário aos seus colaboradores
	// e lhe contrataram  para desenvolver o programa que calculará os reajustes.
	//  Faça um programa que receba o salário de um colaborador e o reajuste segundo o seguinte critério , baseado no salário atual:
	// - Salários até R$280,00 (incluindo): aumento de 20%
	// - Salários entre R$280,00 e R$700,00: aumento de 15% 
	// - Salários entre R$700,00 e R$ 1.500,00: aumento de 10%
	// - Salários acima de R$1.500,00 em diante: aumento de 5%.
	// Após o aumento ter sido realizado, informe na tela: 
	// - O Salário antes do reajuste;
	// - O percentual de aumento  aplicado ;
	// - O valor do aumento;
	// - O novo salário após o aumento;
		
	Scanner scan = new Scanner(System.in);
	System.out.println("Informe o valor do salário ao qual será aplicado o aumento:");
	
	
	float salario = scan.nextFloat();
	float vintePercentual = 20 / 100;
	float quinzePercentual = 15 / 100;
	float dezPercentual = 10 / 100;
	float cincoPercentual = 5 / 100;
	float valorAcrescido;
	float valorFinal;
	
	
	if ( salario <= 280.00) {
		valorFinal = salario + (vintePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 20%");
		valorAcrescido = vintePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);	
	} else if (salario > 280.00 || salario < 700.00) {
		valorFinal = salario + (quinzePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 15%");
		valorAcrescido = quinzePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	} else if (salario > 700.00 || salario < 1500.00) {
		valorFinal = salario + (dezPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 10%");
		valorAcrescido = dezPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	}else {
		valorFinal = salario + (cincoPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 5%");
		valorAcrescido = cincoPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);

	} 
		
	// 12. Faça um programa para o cálculo de uma folha de pagamento sabendo que os descontos são de Impostos de Renda,
	// que depende do salário bruto (conforme tabela abaixo) e 3% para o Sindicato e que o FGTS corresponde a 11% do
	// Salário Bruto menos os descontos. O programa deverá pedir ao usuário o valor da sua hora e a quantidade de horas
	// trabalhadas no mês.
	// - Desconto do IR:
	// - Salario Bruto até R$: 900 (inclusive) - isento.
	// - Salario Bruto até R$: 1500 (inclusive) - desconto de 5%.
	// - Salario Bruto até R$: 2500 (inclusive) - desconto de 10%.
	// - Salario Bruto acima de R$: 2500 - desconto de 20%.
	// - Imprima na tela as informações, dispostas conforme o exemplo abaixo.
	// No exemplo o valor da hora é de R$:5 e as quantidade de horas trabalhadas é de 220. 
		
	// |Salário Bruto: (5*220)    	= R$: 1.100,00|
	// |(-) IR (5%)                 = R$:    55,00|
	// |(-) INSS (10%)              = R$:   110,00|
	// |FGTS (11%)                  = R$:   121,00|
	// |Total de Descontos          = R$:   165,00|
	// |Salário Liquido             = R$:   935,00|
		
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o valor do salário por hora seguido pelo número de horas trabalhadas no mês:");
		
		double salarioHora = scan.nextDouble();
		double horaMes = scan.nextDouble();
		double salarioMes = salarioHora * horaMes;
		double ir5 =  (5 / 100);
		double ir10 =  (10 / 100);
		double ir20 =  (20 / 100);
		double inss =  (10/100);
		double fgts = (11/100);
		
		if(salarioMes <= 900) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + "Isento");
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 900 && salarioMes <= 1500 ) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir5 *salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 1500 && salarioMes <= 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir10*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir20*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else {
			System.out.println("Valores inválidos");
		} 
		
	// 13. Faça um programa que leia um número e exiba o dia correspondente da semana. (1-Domingo, 2-Segunda, etc...), 
	// se digitar outro valor, deve aparecer, valor inválido.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Digite um número de 1 a 7 correspondente a um dia da semana.");
		
		int dia = scan.nextInt();
		
		switch(dia) {
		case 1: System.out.println("Domingo");
		break;
		case 2: System.out.println("Segunda");
		break;
		case 3: System.out.println("Terça");
		break;
		case 4: System.out.println("Quarta");
		break;
		case 5: System.out.println("Quinta");
		break;
		case 6: System.out.println("Sexta");
		break;
		case 7: System.out.println("Sábado");
		break;
		default:System.out.println("Valor inválido");
		}
		*/
	// 14. Faça um programa que lê as duas notas parciais obtidas por um aluno numa disciplina ao longo de um semestre, 
	// e calcule a sua média. A atribuição de conceitos obedece a tabela abaixo:
		
	// | Média de aproveitamento         Conceito|
	// | Entre 9.0 e 10.0                   A    |
	// | Entre 7.5 e 9.0                    B    |
	// | Entre 6.0 e 7.5                    C    |
	// | Entre 4.0 e 6.0                    D    |
	// | Entre 4.0 e 0.0                    E    |
	//
	// O algoritmo deve mostrar na tela as notas, a média ,
	// o conceito correspondente e a mensagem "APROVADO" se o conceito for A, B ou C, e "REPROVADO" se o conceito for D ou E. 
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas parciais do aluno:");
		double primeiraNota = scan.nextDouble();
		double segundaNota = scan.nextDouble();
		double media = primeiraNota + segundaNota / 2;
		
		if(media >= 9) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: A");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 9 && media >= 7.5) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: B");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 7.5 && media >= 6) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: C");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 6 && media >= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: D");
			System.out.println("Aluno(a) foi: Reprovado");
		}else(media <= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: E");
			System.out.println("Aluno(a) foi: Reprovado");
		}
	}}	 
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-03-03 19:32:50.871
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-03-03 19:32:50.872
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-03-03 19:32:53.160
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Exercicios_Java_Aulas_14_15 {
	
	public static void main(String[] args) {
		
	
	
	// 1. Faça um programa que peça dois número e imprima o maior deles.
	
	/* Scanner scan = new Scanner(System.in);
	System.out.println("Entre com dois números inteiros: ");
	
	int num1 = scan.nextInt();
	int num2 = scan.nextInt();
	
	if (num1 > num2) {
	System.out.println("O maior número é: " + num1);
	} else if (num1 < num2) {
		System.out.println("O maior número é: " + num2);
	}}

	// 2. Faça um programa que peça um valor e mostre na tela se o valor é positivo ou negativo. 

		Scanner scan = new Scanner(System.in);
		double numero = scan.nextDouble();
		
		if (numero < 0) {
			System.out.println("Número negativo");
		} else if (numero >= 0){
			System.out.println("Número positivo");
		}
		
		
		
	// 3. Faça um programa que verifique se uma letra digitada é "F", "M" ou "NB".
	// Conforme a letra escrever: F - Feminino, M - Masculino, NB - Não Binário.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Informe o sexo com 'F', 'M', 'NB':");
		String sexo = scan.nextLine();
		
		switch(sexo){
		case "F": System.out.println("F - Feminino");
		break;
		case "M": System.out.println("M- Masculino");
		break;
		case "NB": System.out.println("NB - Não Binário");
		break;
		default: System.out.println("Informação inválida");
		} 
		
	// 4. Faça um programa que verifique se uma letra digitada é vogal ou consoante.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Digite uma letra:");
		String letra = scan.next();
		
		switch(letra) {
		case "a": ;
		case "e": ; 
		case "i": ;
		case "o": ; 
		case "u": System.out.println("Vogal");
		break;
		default: System.out.println("Consoante ou numeral");
		}
		
		
	// 5. Faça um programa para leitura de duas notas parciais de um aluno.
	// O programa deve calcular a média alcançada por aluno e apresentar:
	// - A mensagem "Aprovado" se a média for maior ou igual a 7.
	// - A mensagem "Reprovado" se a média alcança for menor que 7.
	// - A mensagem "Aprovado com Distinção" se a média alcançada for igual a 10.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas do(a) aluno(a):");
		double nota1 = scan.nextDouble();
		double nota2 = scan.nextDouble();
		double media = (nota1 + nota2) / 2;
		
		if(media >= 7 && media < 9 ) {
			System.out.println("Aprovado.");
		}else if (media == 10){
			System.out.println("Aprovado com Distinção!");
		}else {
			System.out.println("Reprovado.");
		}
		
		
	// 6 . Faça um programa que leia três números e mostre o maior deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if(num1 > num2 && num1 > num3) {
			System.out.println("O maior número é: " + num1);
		}else if(num2 > num1 && num2 > num3) {
			System.out.println("O maior número é: " + num2);
		}else {
			System.out.println("O maior número é: " + num3);
		}
		
		
	// 7. Faça um programa que leia três número e mostre o maior e menor deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1 > num2 && num1 > num3 && num2 > num3) {
			System.out.println("O maior número é: " + num1);
			System.out.println("O menor número é: " + num3);
		} else if (num2 > num1 && num2 > num3 && num3 > num1) {
			System.out.println("O maior número é: " + num2);
			System.out.println("O menor número é: " + num1);
		} else if (num3 > num1 && num3 > num2 && num2 > num1) {
			System.out.println("O maior número é: " + num3);
			System.out.println("O menor número é:" + num1);
		}
		

		
	// 8. Faça um programa que pergunte o preço dos três produtos e 
	//	informe qual produto você deve comprar, sabendo que a decisão é sempre pelo mais barato.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe os valores dos três produtos:");
		double prod1 = scan.nextDouble();
		double prod2 = scan.nextDouble();
		double prod3 = scan.nextDouble();
		
		if (prod1 < prod2 && prod1 < prod3) {
			System.out.println("O produto com menor preço é: " + prod1);
		}else if(prod2 < prod1 && prod2 < prod3) {
			System.out.println("O produto com menor preço é: " + prod2);
		}else {
			System.out.println("O produto com menor preço é: " + prod3);
		}
		
		
		
	// 9. Faça um programa que leia três números e mostre-os em ordem descrescente:
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Entre com três números");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1> num2 && num1 > num3 && num2 > num3) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num2 + ", " + num3 +  ".");
		}else if (num2> num1 && num2 > num3 && num1 > num3) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num1 + ", " + num3 + ".");
		}else if (num3> num1 && num3 > num2 && num2 > num1) {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num2 + ", " + num1 + ".");
		}else if (num2 > num3 && num2 > num1 && num3 > num1) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num3 + ", " + num1 + ".");
		}else if(num1 > num2 && num1 > num3 && num3 > num2) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num3 + ", " + num2 + ".");
		}else {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num1 + ", " + num2 + ".");
		}
		
		
		
	// 10. Faça um programa que pergunte em que turno você estuda.
	// Peça para digitar M - Matutino, V - Vespertino, ou N - Noturno. Imprima a mensagem "Bom dia!",
	// "Boa tarde!" ou "Boa noite!" ou "Valor inválido", conforme o caso.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o turno em que você estudo com 'M' para matunino," + 
		"'V' para vespertino e 'N' para noturno:");
		String turno = scan.next();
		
		switch(turno) {
		case "M": System.out.println("Bom dia!");
		break;
		case "V": System.out.println("Boa tarde!");
		break;
		case "N": System.out.println("Boa noite!");
		break;
		default: System.out.println("Valor inválido");
		}
		
		
	// 11. As Organizações Tabajara  resolveram dar um aumento de salário aos seus colaboradores
	// e lhe contrataram  para desenvolver o programa que calculará os reajustes.
	//  Faça um programa que receba o salário de um colaborador e o reajuste segundo o seguinte critério , baseado no salário atual:
	// - Salários até R$280,00 (incluindo): aumento de 20%
	// - Salários entre R$280,00 e R$700,00: aumento de 15% 
	// - Salários entre R$700,00 e R$ 1.500,00: aumento de 10%
	// - Salários acima de R$1.500,00 em diante: aumento de 5%.
	// Após o aumento ter sido realizado, informe na tela: 
	// - O Salário antes do reajuste;
	// - O percentual de aumento  aplicado ;
	// - O valor do aumento;
	// - O novo salário após o aumento;
		
	Scanner scan = new Scanner(System.in);
	System.out.println("Informe o valor do salário ao qual será aplicado o aumento:");
	
	
	float salario = scan.nextFloat();
	float vintePercentual = 20 / 100;
	float quinzePercentual = 15 / 100;
	float dezPercentual = 10 / 100;
	float cincoPercentual = 5 / 100;
	float valorAcrescido;
	float valorFinal;
	
	
	if ( salario <= 280.00) {
		valorFinal = salario + (vintePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 20%");
		valorAcrescido = vintePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);	
	} else if (salario > 280.00 || salario < 700.00) {
		valorFinal = salario + (quinzePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 15%");
		valorAcrescido = quinzePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	} else if (salario > 700.00 || salario < 1500.00) {
		valorFinal = salario + (dezPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 10%");
		valorAcrescido = dezPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	}else {
		valorFinal = salario + (cincoPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 5%");
		valorAcrescido = cincoPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);

	} 
		
	// 12. Faça um programa para o cálculo de uma folha de pagamento sabendo que os descontos são de Impostos de Renda,
	// que depende do salário bruto (conforme tabela abaixo) e 3% para o Sindicato e que o FGTS corresponde a 11% do
	// Salário Bruto menos os descontos. O programa deverá pedir ao usuário o valor da sua hora e a quantidade de horas
	// trabalhadas no mês.
	// - Desconto do IR:
	// - Salario Bruto até R$: 900 (inclusive) - isento.
	// - Salario Bruto até R$: 1500 (inclusive) - desconto de 5%.
	// - Salario Bruto até R$: 2500 (inclusive) - desconto de 10%.
	// - Salario Bruto acima de R$: 2500 - desconto de 20%.
	// - Imprima na tela as informações, dispostas conforme o exemplo abaixo.
	// No exemplo o valor da hora é de R$:5 e as quantidade de horas trabalhadas é de 220. 
		
	// |Salário Bruto: (5*220)    	= R$: 1.100,00|
	// |(-) IR (5%)                 = R$:    55,00|
	// |(-) INSS (10%)              = R$:   110,00|
	// |FGTS (11%)                  = R$:   121,00|
	// |Total de Descontos          = R$:   165,00|
	// |Salário Liquido             = R$:   935,00|
		
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o valor do salário por hora seguido pelo número de horas trabalhadas no mês:");
		
		double salarioHora = scan.nextDouble();
		double horaMes = scan.nextDouble();
		double salarioMes = salarioHora * horaMes;
		double ir5 =  (5 / 100);
		double ir10 =  (10 / 100);
		double ir20 =  (20 / 100);
		double inss =  (10/100);
		double fgts = (11/100);
		
		if(salarioMes <= 900) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + "Isento");
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 900 && salarioMes <= 1500 ) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir5 *salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 1500 && salarioMes <= 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir10*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir20*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else {
			System.out.println("Valores inválidos");
		} 
		
	// 13. Faça um programa que leia um número e exiba o dia correspondente da semana. (1-Domingo, 2-Segunda, etc...), 
	// se digitar outro valor, deve aparecer, valor inválido.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Digite um número de 1 a 7 correspondente a um dia da semana.");
		
		int dia = scan.nextInt();
		
		switch(dia) {
		case 1: System.out.println("Domingo");
		break;
		case 2: System.out.println("Segunda");
		break;
		case 3: System.out.println("Terça");
		break;
		case 4: System.out.println("Quarta");
		break;
		case 5: System.out.println("Quinta");
		break;
		case 6: System.out.println("Sexta");
		break;
		case 7: System.out.println("Sábado");
		break;
		default:System.out.println("Valor inválido");
		}
		*/
	// 14. Faça um programa que lê as duas notas parciais obtidas por um aluno numa disciplina ao longo de um semestre, 
	// e calcule a sua média. A atribuição de conceitos obedece a tabela abaixo:
		
	// | Média de aproveitamento         Conceito|
	// | Entre 9.0 e 10.0                   A    |
	// | Entre 7.5 e 9.0                    B    |
	// | Entre 6.0 e 7.5                    C    |
	// | Entre 4.0 e 6.0                    D    |
	// | Entre 4.0 e 0.0                    E    |
	//
	// O algoritmo deve mostrar na tela as notas, a média ,
	// o conceito correspondente e a mensagem "APROVADO" se o conceito for A, B ou C, e "REPROVADO" se o conceito for D ou E. 
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas parciais do aluno:");
		double primeiraNota = scan.nextDouble();
		double segundaNota = scan.nextDouble();
		double media = primeiraNota + segundaNota / 2;
		
		if(media >= 9) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: A");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 9 && media >= 7.5) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: B");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 7.5 && media >= 6) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: C");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 6 && media >= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: D");
			System.out.println("Aluno(a) foi: Reprovado");
		}else(media <= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: E");
			System.out.println("Aluno(a) foi: Reprovado");
		}
	}}	 
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-03-03 19:32:53.161
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-03-03 19:32:53.161
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-03-03 19:32:53.818
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Exercicios_Java_Aulas_14_15 {
	
	public static void main(String[] args) {
		
	
	
	// 1. Faça um programa que peça dois número e imprima o maior deles.
	
	/* Scanner scan = new Scanner(System.in);
	System.out.println("Entre com dois números inteiros: ");
	
	int num1 = scan.nextInt();
	int num2 = scan.nextInt();
	
	if (num1 > num2) {
	System.out.println("O maior número é: " + num1);
	} else if (num1 < num2) {
		System.out.println("O maior número é: " + num2);
	}}

	// 2. Faça um programa que peça um valor e mostre na tela se o valor é positivo ou negativo. 

		Scanner scan = new Scanner(System.in);
		double numero = scan.nextDouble();
		
		if (numero < 0) {
			System.out.println("Número negativo");
		} else if (numero >= 0){
			System.out.println("Número positivo");
		}
		
		
		
	// 3. Faça um programa que verifique se uma letra digitada é "F", "M" ou "NB".
	// Conforme a letra escrever: F - Feminino, M - Masculino, NB - Não Binário.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Informe o sexo com 'F', 'M', 'NB':");
		String sexo = scan.nextLine();
		
		switch(sexo){
		case "F": System.out.println("F - Feminino");
		break;
		case "M": System.out.println("M- Masculino");
		break;
		case "NB": System.out.println("NB - Não Binário");
		break;
		default: System.out.println("Informação inválida");
		} 
		
	// 4. Faça um programa que verifique se uma letra digitada é vogal ou consoante.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Digite uma letra:");
		String letra = scan.next();
		
		switch(letra) {
		case "a": ;
		case "e": ; 
		case "i": ;
		case "o": ; 
		case "u": System.out.println("Vogal");
		break;
		default: System.out.println("Consoante ou numeral");
		}
		
		
	// 5. Faça um programa para leitura de duas notas parciais de um aluno.
	// O programa deve calcular a média alcançada por aluno e apresentar:
	// - A mensagem "Aprovado" se a média for maior ou igual a 7.
	// - A mensagem "Reprovado" se a média alcança for menor que 7.
	// - A mensagem "Aprovado com Distinção" se a média alcançada for igual a 10.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas do(a) aluno(a):");
		double nota1 = scan.nextDouble();
		double nota2 = scan.nextDouble();
		double media = (nota1 + nota2) / 2;
		
		if(media >= 7 && media < 9 ) {
			System.out.println("Aprovado.");
		}else if (media == 10){
			System.out.println("Aprovado com Distinção!");
		}else {
			System.out.println("Reprovado.");
		}
		
		
	// 6 . Faça um programa que leia três números e mostre o maior deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if(num1 > num2 && num1 > num3) {
			System.out.println("O maior número é: " + num1);
		}else if(num2 > num1 && num2 > num3) {
			System.out.println("O maior número é: " + num2);
		}else {
			System.out.println("O maior número é: " + num3);
		}
		
		
	// 7. Faça um programa que leia três número e mostre o maior e menor deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1 > num2 && num1 > num3 && num2 > num3) {
			System.out.println("O maior número é: " + num1);
			System.out.println("O menor número é: " + num3);
		} else if (num2 > num1 && num2 > num3 && num3 > num1) {
			System.out.println("O maior número é: " + num2);
			System.out.println("O menor número é: " + num1);
		} else if (num3 > num1 && num3 > num2 && num2 > num1) {
			System.out.println("O maior número é: " + num3);
			System.out.println("O menor número é:" + num1);
		}
		

		
	// 8. Faça um programa que pergunte o preço dos três produtos e 
	//	informe qual produto você deve comprar, sabendo que a decisão é sempre pelo mais barato.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe os valores dos três produtos:");
		double prod1 = scan.nextDouble();
		double prod2 = scan.nextDouble();
		double prod3 = scan.nextDouble();
		
		if (prod1 < prod2 && prod1 < prod3) {
			System.out.println("O produto com menor preço é: " + prod1);
		}else if(prod2 < prod1 && prod2 < prod3) {
			System.out.println("O produto com menor preço é: " + prod2);
		}else {
			System.out.println("O produto com menor preço é: " + prod3);
		}
		
		
		
	// 9. Faça um programa que leia três números e mostre-os em ordem descrescente:
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Entre com três números");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1> num2 && num1 > num3 && num2 > num3) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num2 + ", " + num3 +  ".");
		}else if (num2> num1 && num2 > num3 && num1 > num3) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num1 + ", " + num3 + ".");
		}else if (num3> num1 && num3 > num2 && num2 > num1) {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num2 + ", " + num1 + ".");
		}else if (num2 > num3 && num2 > num1 && num3 > num1) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num3 + ", " + num1 + ".");
		}else if(num1 > num2 && num1 > num3 && num3 > num2) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num3 + ", " + num2 + ".");
		}else {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num1 + ", " + num2 + ".");
		}
		
		
		
	// 10. Faça um programa que pergunte em que turno você estuda.
	// Peça para digitar M - Matutino, V - Vespertino, ou N - Noturno. Imprima a mensagem "Bom dia!",
	// "Boa tarde!" ou "Boa noite!" ou "Valor inválido", conforme o caso.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o turno em que você estudo com 'M' para matunino," + 
		"'V' para vespertino e 'N' para noturno:");
		String turno = scan.next();
		
		switch(turno) {
		case "M": System.out.println("Bom dia!");
		break;
		case "V": System.out.println("Boa tarde!");
		break;
		case "N": System.out.println("Boa noite!");
		break;
		default: System.out.println("Valor inválido");
		}
		
		
	// 11. As Organizações Tabajara  resolveram dar um aumento de salário aos seus colaboradores
	// e lhe contrataram  para desenvolver o programa que calculará os reajustes.
	//  Faça um programa que receba o salário de um colaborador e o reajuste segundo o seguinte critério , baseado no salário atual:
	// - Salários até R$280,00 (incluindo): aumento de 20%
	// - Salários entre R$280,00 e R$700,00: aumento de 15% 
	// - Salários entre R$700,00 e R$ 1.500,00: aumento de 10%
	// - Salários acima de R$1.500,00 em diante: aumento de 5%.
	// Após o aumento ter sido realizado, informe na tela: 
	// - O Salário antes do reajuste;
	// - O percentual de aumento  aplicado ;
	// - O valor do aumento;
	// - O novo salário após o aumento;
		
	Scanner scan = new Scanner(System.in);
	System.out.println("Informe o valor do salário ao qual será aplicado o aumento:");
	
	
	float salario = scan.nextFloat();
	float vintePercentual = 20 / 100;
	float quinzePercentual = 15 / 100;
	float dezPercentual = 10 / 100;
	float cincoPercentual = 5 / 100;
	float valorAcrescido;
	float valorFinal;
	
	
	if ( salario <= 280.00) {
		valorFinal = salario + (vintePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 20%");
		valorAcrescido = vintePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);	
	} else if (salario > 280.00 || salario < 700.00) {
		valorFinal = salario + (quinzePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 15%");
		valorAcrescido = quinzePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	} else if (salario > 700.00 || salario < 1500.00) {
		valorFinal = salario + (dezPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 10%");
		valorAcrescido = dezPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	}else {
		valorFinal = salario + (cincoPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 5%");
		valorAcrescido = cincoPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);

	} 
		
	// 12. Faça um programa para o cálculo de uma folha de pagamento sabendo que os descontos são de Impostos de Renda,
	// que depende do salário bruto (conforme tabela abaixo) e 3% para o Sindicato e que o FGTS corresponde a 11% do
	// Salário Bruto menos os descontos. O programa deverá pedir ao usuário o valor da sua hora e a quantidade de horas
	// trabalhadas no mês.
	// - Desconto do IR:
	// - Salario Bruto até R$: 900 (inclusive) - isento.
	// - Salario Bruto até R$: 1500 (inclusive) - desconto de 5%.
	// - Salario Bruto até R$: 2500 (inclusive) - desconto de 10%.
	// - Salario Bruto acima de R$: 2500 - desconto de 20%.
	// - Imprima na tela as informações, dispostas conforme o exemplo abaixo.
	// No exemplo o valor da hora é de R$:5 e as quantidade de horas trabalhadas é de 220. 
		
	// |Salário Bruto: (5*220)    	= R$: 1.100,00|
	// |(-) IR (5%)                 = R$:    55,00|
	// |(-) INSS (10%)              = R$:   110,00|
	// |FGTS (11%)                  = R$:   121,00|
	// |Total de Descontos          = R$:   165,00|
	// |Salário Liquido             = R$:   935,00|
		
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o valor do salário por hora seguido pelo número de horas trabalhadas no mês:");
		
		double salarioHora = scan.nextDouble();
		double horaMes = scan.nextDouble();
		double salarioMes = salarioHora * horaMes;
		double ir5 =  (5 / 100);
		double ir10 =  (10 / 100);
		double ir20 =  (20 / 100);
		double inss =  (10/100);
		double fgts = (11/100);
		
		if(salarioMes <= 900) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + "Isento");
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 900 && salarioMes <= 1500 ) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir5 *salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 1500 && salarioMes <= 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir10*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir20*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else {
			System.out.println("Valores inválidos");
		} 
		
	// 13. Faça um programa que leia um número e exiba o dia correspondente da semana. (1-Domingo, 2-Segunda, etc...), 
	// se digitar outro valor, deve aparecer, valor inválido.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Digite um número de 1 a 7 correspondente a um dia da semana.");
		
		int dia = scan.nextInt();
		
		switch(dia) {
		case 1: System.out.println("Domingo");
		break;
		case 2: System.out.println("Segunda");
		break;
		case 3: System.out.println("Terça");
		break;
		case 4: System.out.println("Quarta");
		break;
		case 5: System.out.println("Quinta");
		break;
		case 6: System.out.println("Sexta");
		break;
		case 7: System.out.println("Sábado");
		break;
		default:System.out.println("Valor inválido");
		}
		*/
	// 14. Faça um programa que lê as duas notas parciais obtidas por um aluno numa disciplina ao longo de um semestre, 
	// e calcule a sua média. A atribuição de conceitos obedece a tabela abaixo:
		
	// | Média de aproveitamento         Conceito|
	// | Entre 9.0 e 10.0                   A    |
	// | Entre 7.5 e 9.0                    B    |
	// | Entre 6.0 e 7.5                    C    |
	// | Entre 4.0 e 6.0                    D    |
	// | Entre 4.0 e 0.0                    E    |
	//
	// O algoritmo deve mostrar na tela as notas, a média ,
	// o conceito correspondente e a mensagem "APROVADO" se o conceito for A, B ou C, e "REPROVADO" se o conceito for D ou E. 
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas parciais do aluno:");
		double primeiraNota = scan.nextDouble();
		double segundaNota = scan.nextDouble();
		double media = primeiraNota + segundaNota / 2;
		
		if(media >= 9) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: A");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 9 && media >= 7.5) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: B");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 7.5 && media >= 6) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: C");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 6 && media >= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: D");
			System.out.println("Aluno(a) foi: Reprovado");
		}else(media <= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: E");
			System.out.println("Aluno(a) foi: Reprovado");
		}
	}}	 
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-03-03 19:32:53.819
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-03-03 19:32:53.819
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-03-03 19:32:53.822
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Exercicios_Java_Aulas_14_15 {
	
	public static void main(String[] args) {
		
	
	
	// 1. Faça um programa que peça dois número e imprima o maior deles.
	
	/* Scanner scan = new Scanner(System.in);
	System.out.println("Entre com dois números inteiros: ");
	
	int num1 = scan.nextInt();
	int num2 = scan.nextInt();
	
	if (num1 > num2) {
	System.out.println("O maior número é: " + num1);
	} else if (num1 < num2) {
		System.out.println("O maior número é: " + num2);
	}}

	// 2. Faça um programa que peça um valor e mostre na tela se o valor é positivo ou negativo. 

		Scanner scan = new Scanner(System.in);
		double numero = scan.nextDouble();
		
		if (numero < 0) {
			System.out.println("Número negativo");
		} else if (numero >= 0){
			System.out.println("Número positivo");
		}
		
		
		
	// 3. Faça um programa que verifique se uma letra digitada é "F", "M" ou "NB".
	// Conforme a letra escrever: F - Feminino, M - Masculino, NB - Não Binário.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Informe o sexo com 'F', 'M', 'NB':");
		String sexo = scan.nextLine();
		
		switch(sexo){
		case "F": System.out.println("F - Feminino");
		break;
		case "M": System.out.println("M- Masculino");
		break;
		case "NB": System.out.println("NB - Não Binário");
		break;
		default: System.out.println("Informação inválida");
		} 
		
	// 4. Faça um programa que verifique se uma letra digitada é vogal ou consoante.
		
		Scanner scan = new Scanner(System.in);
		
		System.out.println("Digite uma letra:");
		String letra = scan.next();
		
		switch(letra) {
		case "a": ;
		case "e": ; 
		case "i": ;
		case "o": ; 
		case "u": System.out.println("Vogal");
		break;
		default: System.out.println("Consoante ou numeral");
		}
		
		
	// 5. Faça um programa para leitura de duas notas parciais de um aluno.
	// O programa deve calcular a média alcançada por aluno e apresentar:
	// - A mensagem "Aprovado" se a média for maior ou igual a 7.
	// - A mensagem "Reprovado" se a média alcança for menor que 7.
	// - A mensagem "Aprovado com Distinção" se a média alcançada for igual a 10.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas do(a) aluno(a):");
		double nota1 = scan.nextDouble();
		double nota2 = scan.nextDouble();
		double media = (nota1 + nota2) / 2;
		
		if(media >= 7 && media < 9 ) {
			System.out.println("Aprovado.");
		}else if (media == 10){
			System.out.println("Aprovado com Distinção!");
		}else {
			System.out.println("Reprovado.");
		}
		
		
	// 6 . Faça um programa que leia três números e mostre o maior deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if(num1 > num2 && num1 > num3) {
			System.out.println("O maior número é: " + num1);
		}else if(num2 > num1 && num2 > num3) {
			System.out.println("O maior número é: " + num2);
		}else {
			System.out.println("O maior número é: " + num3);
		}
		
		
	// 7. Faça um programa que leia três número e mostre o maior e menor deles.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe três números a serem comparados:");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1 > num2 && num1 > num3 && num2 > num3) {
			System.out.println("O maior número é: " + num1);
			System.out.println("O menor número é: " + num3);
		} else if (num2 > num1 && num2 > num3 && num3 > num1) {
			System.out.println("O maior número é: " + num2);
			System.out.println("O menor número é: " + num1);
		} else if (num3 > num1 && num3 > num2 && num2 > num1) {
			System.out.println("O maior número é: " + num3);
			System.out.println("O menor número é:" + num1);
		}
		

		
	// 8. Faça um programa que pergunte o preço dos três produtos e 
	//	informe qual produto você deve comprar, sabendo que a decisão é sempre pelo mais barato.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe os valores dos três produtos:");
		double prod1 = scan.nextDouble();
		double prod2 = scan.nextDouble();
		double prod3 = scan.nextDouble();
		
		if (prod1 < prod2 && prod1 < prod3) {
			System.out.println("O produto com menor preço é: " + prod1);
		}else if(prod2 < prod1 && prod2 < prod3) {
			System.out.println("O produto com menor preço é: " + prod2);
		}else {
			System.out.println("O produto com menor preço é: " + prod3);
		}
		
		
		
	// 9. Faça um programa que leia três números e mostre-os em ordem descrescente:
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Entre com três números");
		int num1 = scan.nextInt();
		int num2 = scan.nextInt();
		int num3 = scan.nextInt();
		
		if (num1> num2 && num1 > num3 && num2 > num3) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num2 + ", " + num3 +  ".");
		}else if (num2> num1 && num2 > num3 && num1 > num3) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num1 + ", " + num3 + ".");
		}else if (num3> num1 && num3 > num2 && num2 > num1) {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num2 + ", " + num1 + ".");
		}else if (num2 > num3 && num2 > num1 && num3 > num1) {
			System.out.println("A ordem descrescente é: " + num2 + ", " + num3 + ", " + num1 + ".");
		}else if(num1 > num2 && num1 > num3 && num3 > num2) {
			System.out.println("A ordem descrescente é: " + num1 + ", " + num3 + ", " + num2 + ".");
		}else {
			System.out.println("A ordem descrescente é: " + num3 + ", " + num1 + ", " + num2 + ".");
		}
		
		
		
	// 10. Faça um programa que pergunte em que turno você estuda.
	// Peça para digitar M - Matutino, V - Vespertino, ou N - Noturno. Imprima a mensagem "Bom dia!",
	// "Boa tarde!" ou "Boa noite!" ou "Valor inválido", conforme o caso.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o turno em que você estudo com 'M' para matunino," + 
		"'V' para vespertino e 'N' para noturno:");
		String turno = scan.next();
		
		switch(turno) {
		case "M": System.out.println("Bom dia!");
		break;
		case "V": System.out.println("Boa tarde!");
		break;
		case "N": System.out.println("Boa noite!");
		break;
		default: System.out.println("Valor inválido");
		}
		
		
	// 11. As Organizações Tabajara  resolveram dar um aumento de salário aos seus colaboradores
	// e lhe contrataram  para desenvolver o programa que calculará os reajustes.
	//  Faça um programa que receba o salário de um colaborador e o reajuste segundo o seguinte critério , baseado no salário atual:
	// - Salários até R$280,00 (incluindo): aumento de 20%
	// - Salários entre R$280,00 e R$700,00: aumento de 15% 
	// - Salários entre R$700,00 e R$ 1.500,00: aumento de 10%
	// - Salários acima de R$1.500,00 em diante: aumento de 5%.
	// Após o aumento ter sido realizado, informe na tela: 
	// - O Salário antes do reajuste;
	// - O percentual de aumento  aplicado ;
	// - O valor do aumento;
	// - O novo salário após o aumento;
		
	Scanner scan = new Scanner(System.in);
	System.out.println("Informe o valor do salário ao qual será aplicado o aumento:");
	
	
	float salario = scan.nextFloat();
	float vintePercentual = 20 / 100;
	float quinzePercentual = 15 / 100;
	float dezPercentual = 10 / 100;
	float cincoPercentual = 5 / 100;
	float valorAcrescido;
	float valorFinal;
	
	
	if ( salario <= 280.00) {
		valorFinal = salario + (vintePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 20%");
		valorAcrescido = vintePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);	
	} else if (salario > 280.00 || salario < 700.00) {
		valorFinal = salario + (quinzePercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 15%");
		valorAcrescido = quinzePercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	} else if (salario > 700.00 || salario < 1500.00) {
		valorFinal = salario + (dezPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 10%");
		valorAcrescido = dezPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);
	}else {
		valorFinal = salario + (cincoPercentual * salario);
		System.out.println("Salário antes do reajuste:" + salario);
		System.out.println("Aumento de 5%");
		valorAcrescido = cincoPercentual * salario;
		System.out.println("O valor acrescentado é: " + valorAcrescido);
		System.out.println("O salário após o ajuste é:" + valorFinal);

	} 
		
	// 12. Faça um programa para o cálculo de uma folha de pagamento sabendo que os descontos são de Impostos de Renda,
	// que depende do salário bruto (conforme tabela abaixo) e 3% para o Sindicato e que o FGTS corresponde a 11% do
	// Salário Bruto menos os descontos. O programa deverá pedir ao usuário o valor da sua hora e a quantidade de horas
	// trabalhadas no mês.
	// - Desconto do IR:
	// - Salario Bruto até R$: 900 (inclusive) - isento.
	// - Salario Bruto até R$: 1500 (inclusive) - desconto de 5%.
	// - Salario Bruto até R$: 2500 (inclusive) - desconto de 10%.
	// - Salario Bruto acima de R$: 2500 - desconto de 20%.
	// - Imprima na tela as informações, dispostas conforme o exemplo abaixo.
	// No exemplo o valor da hora é de R$:5 e as quantidade de horas trabalhadas é de 220. 
		
	// |Salário Bruto: (5*220)    	= R$: 1.100,00|
	// |(-) IR (5%)                 = R$:    55,00|
	// |(-) INSS (10%)              = R$:   110,00|
	// |FGTS (11%)                  = R$:   121,00|
	// |Total de Descontos          = R$:   165,00|
	// |Salário Liquido             = R$:   935,00|
		
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe o valor do salário por hora seguido pelo número de horas trabalhadas no mês:");
		
		double salarioHora = scan.nextDouble();
		double horaMes = scan.nextDouble();
		double salarioMes = salarioHora * horaMes;
		double ir5 =  (5 / 100);
		double ir10 =  (10 / 100);
		double ir20 =  (20 / 100);
		double inss =  (10/100);
		double fgts = (11/100);
		
		if(salarioMes <= 900) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + "Isento");
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 900 && salarioMes <= 1500 ) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir5 *salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 1500 && salarioMes <= 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir10*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else if(salarioMes > 2500) {
			System.out.println("Salário Bruto ------ R$:" + salarioMes);
			System.out.println("IR ----------------- R$:" + (ir20*salarioMes));
			System.out.println("INSS --------------- R$:" + (inss * salarioMes));
			System.out.println("FGTS --------------- R$:" + (fgts * salarioMes));
			System.out.println("Total de Descontos - R$:" + (inss*salarioMes + fgts * salarioMes));
			System.out.println("Salário Liquido ---- R$:" + (salarioMes - (inss*salarioMes) - (fgts*salarioMes)));
		}else {
			System.out.println("Valores inválidos");
		} 
		
	// 13. Faça um programa que leia um número e exiba o dia correspondente da semana. (1-Domingo, 2-Segunda, etc...), 
	// se digitar outro valor, deve aparecer, valor inválido.
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Digite um número de 1 a 7 correspondente a um dia da semana.");
		
		int dia = scan.nextInt();
		
		switch(dia) {
		case 1: System.out.println("Domingo");
		break;
		case 2: System.out.println("Segunda");
		break;
		case 3: System.out.println("Terça");
		break;
		case 4: System.out.println("Quarta");
		break;
		case 5: System.out.println("Quinta");
		break;
		case 6: System.out.println("Sexta");
		break;
		case 7: System.out.println("Sábado");
		break;
		default:System.out.println("Valor inválido");
		}
		*/
	// 14. Faça um programa que lê as duas notas parciais obtidas por um aluno numa disciplina ao longo de um semestre, 
	// e calcule a sua média. A atribuição de conceitos obedece a tabela abaixo:
		
	// | Média de aproveitamento         Conceito|
	// | Entre 9.0 e 10.0                   A    |
	// | Entre 7.5 e 9.0                    B    |
	// | Entre 6.0 e 7.5                    C    |
	// | Entre 4.0 e 6.0                    D    |
	// | Entre 4.0 e 0.0                    E    |
	//
	// O algoritmo deve mostrar na tela as notas, a média ,
	// o conceito correspondente e a mensagem "APROVADO" se o conceito for A, B ou C, e "REPROVADO" se o conceito for D ou E. 
		
		Scanner scan = new Scanner(System.in);
		System.out.println("Informe as duas notas parciais do aluno:");
		double primeiraNota = scan.nextDouble();
		double segundaNota = scan.nextDouble();
		double media = primeiraNota + segundaNota / 2;
		
		if(media >= 9) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: A");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 9 && media >= 7.5) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: B");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 7.5 && media >= 6) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: C");
			System.out.println("Aluno(a) foi: Aprovado");
		}else if(media <= 6 && media >= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: D");
			System.out.println("Aluno(a) foi: Reprovado");
		}else(media <= 4) {
			System.out.println("Primeira nota: " + primeiraNota);
			System.out.println("Segunda nota: " + segundaNota);
			System.out.println("Média: " + media);
			System.out.println("Conceito: E");
			System.out.println("Aluno(a) foi: Reprovado");
		}
	}}	 
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.ui 4 0 2022-03-03 19:32:53.823
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1052)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:304)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:190)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4035)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3635)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
!SESSION 2022-03-05 15:52:06.433 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2022-03-05 15:53:21.984
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-03-05 15:53:37.114
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-05 15:53:37.114
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7ebc5be6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4627dfda,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-03-05 15:53:37.114
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1f3361e9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@eebc0db,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-03-05 15:53:46.335
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Everson'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
